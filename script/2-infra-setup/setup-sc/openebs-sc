#!/bin/bash
set -x

time="date"
current_time=$(eval $time)
job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
commit_id=$CI_COMMIT_SHA
source ~/.profile
gittoken=$(echo "$github_token")

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."
${utils_path}/setup_dependencies infra-setup

#pooling over previous job to complete
echo "***********Applying openebs-storage-clas********"
bash script/utils/pooling jobname:s2-j2-cstor-striped-pool
bash script/utils/e2e-cr jobname:s2-j6-policies jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" 

test_name=$(bash script/utils/generate_test_name testcase=cstor-storage-policies metadata="")
echo $test_name

cd litmus
echo "Running the litmus test.."
sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/cstor-sparse-pool/cstor-block-disk-pool-stripe/g' providers/cstor-storage-policies/run_litmus_test.yml
run_test=providers/cstor-storage-policies/run_litmus_test.yml

cat $run_test

bash ../script/utils/litmus_job_runner label='app:cstor-storage-policy' job=$run_test

echo "Dumping state of cluster post job run"; echo ""
bash ../script/utils/dump_cluster_state;

cd ..
bash script/utils/event_updater jobname:s2-j6-policies $test_name jobid:"$job_id" pipelineid:"$pipeline_id" 
#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:s2-j6-policies jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" test_result:Pass 

if [ "$rc_val" != "0" ]; then
exit 1;
fi