#!/bin/bash
set -x

job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
commit_id=$CI_COMMIT_SHA
releaseTag=$RELEASE_TAG
source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

echo "Setting up test dependencies.."
${utils_path}/setup_dependencies infra-setup

#pooling over previous job to complete
echo "*******Creating cstor-pool**************"
bash script/utils/pooling jobname:s2-j5-cspc-stripe-pool
bash script/utils/e2e-cr jobname:s2-j6-csi-provisioner jobphase:Waiting
bash script/utils/e2e-cr jobname:s2-j6-csi-provisioner jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"

test_name=$(bash script/utils/generate_test_name testcase=csi-provision metadata="")
echo $test_name
git clone https://github.com/mayadata-io/litmus.git
cd litmus

cp providers/csi-provisioner/run_litmus_test.yml csi_provisioner.yml

sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/value: openebs-csi-cstor-sparse/value: openebs-cstor-csi/g' \
-e 's/cstor-sparse-pool/cstor-cspc-disk-pool/g' csi_provisioner.yml

cat csi_provisioner.yml

bash ../script/utils/litmus_job_runner label='app:csi-provisioner' job=csi_provisioner.yml
bash ../script/utils/dump_cluster_state;
cd ..
bash script/utils/event_updater jobname:s2-j6-csi-provisioner $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:s2-j6-csi-provisioner jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi