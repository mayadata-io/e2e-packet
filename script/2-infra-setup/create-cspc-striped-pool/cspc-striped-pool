#!/bin/bash
set -x

job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
commit_id=$CI_COMMIT_SHA
releaseTag=$RELEASE_TAG
source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

echo "Setting up test dependencies.."
${utils_path}/setup_dependencies infra-setup

#pooling over previous job to complete
echo "*******Creating cstor-pool**************"

bash script/utils/pooling jobname:s2-j4-nfs-provisioner
bash script/utils/e2e-cr jobname:s2-j5-cspc-stripe-pool jobphase:Waiting
bash script/utils/e2e-cr jobname:s2-j5-cspc-stripe-pool jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"

run_id="cspc-striped";test_name=$(bash script/utils/generate_test_name testcase=cstor-pool-provision metadata=${run_id})
echo $test_name
git clone https://github.com/mayadata-io/litmus.git
cd litmus

cp providers/cstor/cstor-cspc-pool/run_litmus_test.yml cspc_create_striped_pool.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' cspc_create_striped_pool.yml

cat cspc_create_striped_pool.yml

bash ../script/utils/litmus_job_runner label='app:cstor-cspc-pool-provision' job=cspc_create_striped_pool.yml
bash ../script/utils/dump_cluster_state;
cd ..
bash script/utils/event_updater jobname:s2-j5-cspc-stripe-pool $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:s2-j5-cspc-stripe-pool jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi