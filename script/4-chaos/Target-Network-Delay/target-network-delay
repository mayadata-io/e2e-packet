#!/bin/bash
set -x

job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
commit_id=$CI_COMMIT_SHA
releaseTag=$RELEASE_TAG

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."	
${utils_path}/setup_dependencies litmus-test	

bash script/utils/e2e-cr jobname:target-network-delay jobphase:Waiting
bash script/utils/e2e-cr jobname:target-network-delay jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

echo "*******Deploying Busybox Application****"

test_name=$(bash script/utils/generate_test_name testcase=busybox-provision-target-delay metadata="")
echo $test_name

cd litmus
echo "Running the litmus test for Busybox Deployment.."

cp apps/busybox/deployers/run_litmus_test.yml busybox_target_delay.yml

sed -i -e 's/app: busybox-litmus/app: deploy-busybox-target-delay/g' \
-e 's/app=busybox-sts/app=target-delay/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: openebs-busybox/value: openebs-bb-targetdelay/g' \
-e 's/value: app-busybox-ns/value: target-delay/g' busybox_target_delay.yml
cat busybox_target_delay.yml

bash ../script/utils/litmus_job_runner label='app:deploy-busybox-target-delay' job=busybox_target_delay.yml
cd ..
bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:target-network-delay $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 2 #
################

run_id="target-network-delay";test_name=$(bash script/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd litmus
# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_litmus_test.yml busybox_loadgen_target_network_delay.yml

# Update the environmental variables in litmus job spec.

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appNamespace      | env    | app-busybox-ns                      | target-delay                                     | 
 | Litmus job label  | label  | liveness: litmus-busybox-liveness   | liveness: busybox-liveness-target-network-delay  |
 | appLabel          | env    | app=busybox-sts                     | app=target-delay                                 | 
  ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: app-busybox-ns/value: target-delay/g' \
-e 's/app=busybox-sts/app=target-delay/g' \
-e 's/liveness: litmus-busybox-liveness/liveness: busybox-liveness-target-network-delay/g' busybox_loadgen_target_network_delay.yml

cat busybox_loadgen_target_network_delay.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' busybox_loadgen_target_network_delay.yml

# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../script/utils/litmus_job_runner label='liveness:busybox-liveness-target-network-delay' job=busybox_loadgen_target_network_delay.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash script/utils/dump_cluster_state;
# Update the e2e event for the job.
bash script/utils/event_updater jobname:target-network-delay $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 3 #
################

echo "*******Performing network delay on Target**********"

test_name=$(bash script/utils/generate_test_name testcase=openebs-target-network-delay metadata="")
echo $test_name

cd litmus
cp experiments/chaos/openebs_target_network_delay/run_litmus_test.yml run_targetdelay_test.yml

sed -i -e 's/value: percona-mysql-claim/value: openebs-bb-targetdelay/g' \
-e 's/value: '\''name=percona'\''/value: '\''app=target-delay'\''/g' \
-e 's/value: app-percona-ns/value: target-delay/g' run_targetdelay_test.yml

echo "Running the litmus test for Busybox Deployment Scaleup.."
cat run_targetdelay_test.yml

bash ../script/utils/litmus_job_runner label='name:openebs-target-network-delay' job=run_targetdelay_test.yml
cd ..
bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:target-network-delay $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 4 #
################

run_id="deprovision-target-delay";test_name=$(bash script/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd litmus
# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_litmus_test.yml busybox_loadgen_deprovision_target_network_delay.yml

# Update the environmental variables in litmus job spec.

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appNamespace      | env    | app-busybox-ns                      | target-delay                                     | 
 | appLabel          | env    | app=busybox-sts                     | app=target-delay                                 |
 | Litmus job label  | label  | liveness: litmus-busybox-liveness   | liveness: busybox-liveness-deprovision-target-network-delay  |
 | action            | env    | provision                           | deprovision                                      | 
  ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: app-busybox-ns/value: target-delay/g' \
-e 's/app=busybox-sts/app=target-delay/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/generateName: litmus-busybox-liveness/generateName: busybox-liveness-dep-target-delay/g' \
-e 's/liveness: litmus-busybox-liveness/liveness: busybox-liveness-deprovision-target-network-delay/g' busybox_loadgen_deprovision_target_network_delay.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' busybox_loadgen_deprovision_target_network_delay.yml

cat busybox_loadgen_deprovision_target_network_delay.yml
# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../script/utils/litmus_job_runner label='liveness:busybox-liveness-deprovision-target-network-delay' job=busybox_loadgen_deprovision_target_network_delay.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:target-network-delay $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

rc_val=$(echo $?)

# Update result of the test case in github mayadata-io/e2e-packet repository.
if [ "$rc_val" != "0" ]; then
exit 1;
fi

################
# LitmusBook 5 #
################

echo "********Deprovisioning Busybox Application*******"

test_name=$(bash script/utils/generate_test_name testcase=busybox-deprovision-target-delay metadata="")
echo $test_name

cd litmus
cp apps/busybox/deployers/run_litmus_test.yml deprovision_target_delay.yml

sed -i -e 's/generateName: litmus-busybox-deploy/generateName: busybox-deprovision-target-delay/g' \
-e 's/app: busybox-litmus/app: busybox-deprovision-target-delay/g' \
-e 's/app=busybox-sts/app=target-delay/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: openebs-busybox/value: openebs-bb-targetdelay/g' \
-e 's/value: app-busybox-ns/value: target-delay/g' \
-e 's/value: provision/value: deprovision/g' deprovision_target_delay.yml

echo "Running the litmus test for Busybox Deployment.."
cat deprovision_target_delay.yml

bash ../script/utils/litmus_job_runner label='app:busybox-deprovision-target-delay' job=deprovision_target_delay.yml
cd ..
bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:target-network-delay $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

rc_val=$(echo $?)

# testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

if [ "$rc_val" != "0" ]; then
exit 1;
fi

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:target-network-delay jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi
