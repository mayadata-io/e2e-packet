#!/bin/bash
set -x

#################
## ENVIRONMENT ##
#################

#utils_path="/openebs/e2e-gke/script/utils"

test_name=$(${utils_path}/generate_test_name testcase=memcheck-test metadata=${run_id})
 
###################
## DEPENDENCIES  ##
###################

${utils_path}/setup_dependencies litmus-test

## Clone the litmus repo, navigate to litmus root 
git clone https://github.com/litmuschaos/litmus.git
cd litmus

############################
## LITMUS PRECONDITIONING ##
############################

## TODO: Better way/logic to replace job ENV (SC, PVC, LABEL, NS) based on run instance intent (CLI) 
## TODO: Add logic to add ENV for run_instance_metadata/RunID

: << EOF
  --------------------------------------------------------------------------------------------------------
 | specAttribute        | kind	   | jiva       	| cStor-sparse  	                          |
  --------------------------------------------------------------------------------------------------------
 | litmusJobLabel       | jobSpec  | -                  | prometheus-deployment-litmus-cstor    |
 | providerStorageClass | env 	   | -                  | openebs-cstor-sparse                            |
 | appNamespace         | env	   | -                  | prometheus-cstor                                |
 | runID		| env(add) | - 		        | cstor                                           |
  --------------------------------------------------------------------------------------------------------
EOF

cp experiments/functional/memcheck/run_litmus_test.yml run_test.yml

#################
## RUNNER MAIN ##
#################

echo "Running the litmus test.."
${utils_path}/litmus_job_runner label='app:memcheck-cstor-test' job=run_test.yml
${utils_path}/task_delimiter;

echo "Dumping state of cluster post job run"; echo ""
${utils_path}/dump_cluster_state;
${utils_path}/task_delimiter;

#################
## GET RESULT  ##
#################

## Check the test status & result from the litmus result custom resource
${utils_path}/get_litmus_result ${test_name}

