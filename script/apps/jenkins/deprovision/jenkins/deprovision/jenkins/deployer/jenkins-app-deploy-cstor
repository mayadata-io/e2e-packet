#!/bin/bash
set -x

#################
## ENVIRONMENT ##
#################

## https://github.com/openebs/litmus/blob/master/apps/percona/deployers/test_vars.yml
run_id="cstor";test_name=$(${utils_path}/generate_test_name testcase=jenkins-deployment metadata=${run_id})


###################
## DEPENDENCIES  ##
###################

${utils_path}/setup_dependencies litmus-test

## Clone the litmus repo, navigate to litmus root 

git clone https://github.com/litmuschaos/litmus.git
cd litmus

############################
## LITMUS PRECONDITIONING ##
############################

## TODO: Better way/logic to replace job ENV (SC, PVC, LABEL, NS) based on run instance intent (CLI) 
## TODO: Add logic to add ENV for run_instance_metadata/RunID

: << EOF
  ------------------------------------------------------------------------------------
 | specAttribute        | kind	   | jiva       	| cStor-sparse  	       |
  ------------------------------------------------------------------------------------
 | litmusJobLabel       | jobSpec  | percona-deployment | percona-deployment-cstor     |
 | providerStorageClass | env 	   | openebs-standard   | openebs-cstor-sparse         |
 | appNamespace         | env	   | app-percona-ns     | percona-cstor                |
 | runID		| env(add) | 	-		| cstor 
  ------------------------------------------------------------------------------------
EOF

cp apps/jenkins/deployers/run_litmus_test.yml run_test.yml
sed -i -e 's/app: jenkins-deployment-litmus/app: jenkins-deployment-cstor/g' \
-e 's/value: openebs-standard/value: openebs-cstor-sparse/g' \
-e 's/value: app-jenkins-ns/value: jenkins-cstor/g' run_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_test.yml

#################
## RUNNER MAIN ##
#################

echo "Running the litmus test.."
${utils_path}/litmus_job_runner label='app:jenkins-deployment-cstor' job=run_test.yml
${utils_path}/task_delimiter;

echo "Dumping state of cluster post job run"; echo ""
${utils_path}/dump_cluster_state;
${utils_path}/task_delimiter;

#################
## GET RESULT  ##
#################

## Check the test status & result from the litmus result custom resource
${utils_path}/get_litmus_result ${test_name}

