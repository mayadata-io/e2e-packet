#!/bin/bash
set -x

source ~/.profile
gittoken=$(echo "$github_token")

job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
commit_id=$CI_COMMIT_SHA

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."	
${utils_path}/setup_dependencies litmus-test

bash script/utils/e2e-cr jobname:data-integrity-cstor jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id"
bash script/utils/e2e-cr jobname:data-integrity-cstor jobphase:Running

test_name=$(bash script/utils/generate_test_name testcase=fio-data-integrity metadata="")
echo $test_name
cd litmus
cp experiments/functional/fio/data-integrity/run_litmus_test.yml data_integrity_cstor.yml

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | imagePullPolicy   | image  | Always                              | IfNotPresent                                     | 
 | storgae class     | env    | openebs-standard                    | openebs-cstor-disk                               |
 ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/value: openebs-standard/value: openebs-cstor-disk/g' data_integrity_cstor.yml

cat data_integrity_cstor.yml

bash ../script/utils/litmus_job_runner label='app:fio-di-litmus' job=data_integrity_cstor.yml
cd ..
bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:data-integrity-cstor $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

rc_val=$(echo $?)

# Obtain the status of the test using litmusresult(lr) 
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

# Update the result of the test case in github mayadata-io/e2e-packet repository.
if [ "$rc_val" != "0" ]; then
# python3 script/utils/result/result_update.py $job_id QDLO 3-functional "Ensure the data integrity in openebs volume using fio" $testResult $pipeline_id "$current_time" $commit_id $gitToken
exit 1;
fi

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:data-integrity-cstor jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" test_result:Pass

# python3 script/utils/result/result_update.py $job_id QDLO 3-functional "Ensure the data integrity in openebs volume using fio" $testResult $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi