#!/bin/bash
set -x

job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
commit_id=$CI_COMMIT_SHA

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."	
${utils_path}/setup_dependencies litmus-test

bash script/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id"
bash script/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Running init_time:"$current_time"

################
# LitmusBook 1 #
################

test_name=$(bash script/utils/generate_test_name testcase=memleak-test metadata="")
echo $test_name
cd litmus

cp experiments/functional/custom/tests/memcheck/run_litmus_test.yml memcheck_jiva.yml

: << EOF
  --------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind     | default busybox value               | test specifc value                      |
  --------------------------------------------------------------------------------------------------------------|
 | storage class     | env      | openebs-standard                    | openebs-standard                        |
 | appNamespace      | env      | memleak                             | memleak-jiva                            | 
  --------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: memleak/value: memleak-jiva/g' memcheck_jiva.yml

cat memcheck_jiva.yml

bash ../script/utils/litmus_job_runner label='app:memleak-test' job=memcheck_jiva.yml
cd ..
bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:memory-consumption-jiva $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

if [ "$?" != "0" ]; then
# python3 script/utils/result/result_update.py $job_id SN3A 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

rc_val=$(echo $?)

# testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

if [ "$rc_val" != "0" ]; then
# python3 script/utils/result/result_update.py $job_id SN3A 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gitToken
exit 1;
fi

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Completed end_time:"$current_time" test_result:Pass jobid:"$job_id" pipelineid:"$pipeline_id"
# python3 script/utils/result/result_update.py $job_id SN3A 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
