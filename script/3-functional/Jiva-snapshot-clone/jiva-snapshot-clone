#!/bin/bash
set -x

job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
commit_id=$CI_COMMIT_SHA

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."	
${utils_path}/setup_dependencies litmus-test

bash script/utils/pooling jobname:jiva-snapshot
bash script/utils/e2e-cr jobname:jiva-snapshot-clone jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id"

echo "*******Taking clone of BusyBox snapshot application**********"

################
# LitmusBook 1 #
################

: << EOF
  --------------------------------------------------------------------------------------------------------------------     
 | specAttribute     | kind   |         default value               | test specifc value                              |
  ------------------------------------------------------------------------------------------------------------------- |
 | pvcName           | env    | openebs-busybox                     | busybox-jiva-snapshot                           | 
 | Litmus job label  | label  | app: litmus-clone                   | app: litmus-jiva-clone                          |
 | snapshot name     | env    | value: snapshot-busybox             | value: snapshot-jiva-busybox                    |
 | clone name        | env    | value: clone-busybox                | value: clone-jiva-busybox                       |
 | appNamespace      | env    | app-busybox-ns                      | busybox-jiva-snap                               |
  ---------------------------------------------------------------------------------------------------------------------
EOF

run_id="jiva";test_name=$(bash script/utils/generate_test_name testcase=create-clone metadata=${run_id})
echo $test_name

cd litmus
cp experiments/functional/clone-creation/run_litmus_test.yml run_jiva_clone_test.yml

sed -i -e 's/value: openebs-busybox/value: busybox-jiva-snapshot/g' \
-e 's/app: litmus-clone/app: litmus-jiva-clone/g' \
-e 's/value: snapshot-busybox/value: snapshot-jiva-busybox/g' \
-e 's/value: clone-busybox/value: clone-jiva-busybox/g' \
-e 's/value: app-busybox-ns/value: busybox-jiva-snap/g' run_jiva_clone_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_jiva_clone_test.yml

cat run_jiva_clone_test.yml

bash ../script/utils/litmus_job_runner label='app:litmus-jiva-clone' job=run_jiva_clone_test.yml
cd ..
bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:jiva-snapshot-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id"
rc_val=$(echo $?)

if [ "$rc_val" != "0" ]; then
# python3 script/utils/result/result_update.py $job_id Y4ET 3-functional "Check if the clone can be created using jiva volume snapshot" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:jiva-snapshot-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" test_result:Pass

# python3 script/utils/result/result_update.py $job_id Y4ET 3-functional "Check if the clone can be created using jiva volume snapshot" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
